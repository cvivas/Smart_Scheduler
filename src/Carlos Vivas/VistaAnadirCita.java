/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * VistaAnadirCita.java
 *
 * Created on 28-abr-2009, 16:01:52
 */

package agendainteligente;

import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;

/**
 *
 * @author Carlos Vivas Abilahoud
 */
public class VistaAnadirCita extends javax.swing.JDialog {
CtrlDominio3 CD3=new CtrlDominio3(); //------------------PRUEBAS LUEGO BORRAR
CtrlAgenda CAGE = new CtrlAgenda();

    /** Creates new form VistaAnadirCita */
    public VistaAnadirCita(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(parent);
        cargarTemas();
        textoErrorTitulo.setText("");
        textoErrorDescripcion.setText("");
        textoErrorHorai.setText("");
        textoErrorHoraf.setText("");
        textoErrorRep.setText("");
        textoErrorTema.setText("");
        textoErrorFechaRep.setText("");
        dateComboRep.setVisible(false);
        FinRep.setVisible(false);
    }



    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cancelar = new javax.swing.JButton();
        botonAcceptar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        boxTema = new javax.swing.JComboBox();
        boxPeriodicidad = new javax.swing.JComboBox();
        texTitulo = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        dateComboIni = new datechooser.beans.DateChooserCombo();
        radioRep = new javax.swing.JRadioButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel10 = new javax.swing.JLabel();
        radioLab = new javax.swing.JRadioButton();
        creaTema = new javax.swing.JButton();
        textoErrorTitulo = new javax.swing.JLabel();
        textoErrorDescripcion = new javax.swing.JLabel();
        textoErrorHorai = new javax.swing.JLabel();
        boxAviso = new javax.swing.JCheckBox();
        textoErrorRep = new javax.swing.JLabel();
        textoErrorTema = new javax.swing.JLabel();
        FinRep = new javax.swing.JLabel();
        dateComboRep = new datechooser.beans.DateChooserCombo();
        textoErrorFechaRep = new javax.swing.JLabel();
        boxHoraIni = new javax.swing.JComboBox();
        boxHoraFin = new javax.swing.JComboBox();
        textoErrorHoraf = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Crear_Cita");
        setResizable(false);

        cancelar.setText("Cancelar");
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });

        botonAcceptar.setText("Aceptar");
        botonAcceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAcceptarActionPerformed(evt);
            }
        });

        jLabel1.setText("Título");

        jLabel2.setText("Descripción");

        jLabel3.setText("Tema");

        jLabel5.setText("Fecha ");

        jLabel6.setText("Hora inicio");

        jLabel7.setText("Hora fin");

        boxTema.setModel(new javax.swing.DefaultComboBoxModel());

        boxPeriodicidad.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ninguna", "Diaria", "Semanal", "Mensual", "Anual" }));
        boxPeriodicidad.setToolTipText("indique la periodicidad");
        boxPeriodicidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxPeriodicidadActionPerformed(evt);
            }
        });

        texTitulo.setToolTipText("inserte texto");
        texTitulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                texTituloActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        radioRep.setText("Repetitiva");
        radioRep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioRepActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14));
        jLabel10.setText("Crear Cita");

        radioLab.setText("Laboral");

        creaTema.setText("Crear Tema");
        creaTema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creaTemaActionPerformed(evt);
            }
        });

        textoErrorTitulo.setForeground(new java.awt.Color(255, 0, 0));
        textoErrorTitulo.setText("jLabel8");

        textoErrorDescripcion.setForeground(new java.awt.Color(255, 0, 0));
        textoErrorDescripcion.setText("jLabel12");

        textoErrorHorai.setForeground(new java.awt.Color(255, 0, 0));
        textoErrorHorai.setText("jLabel14");

        boxAviso.setText("Aviso");

        textoErrorRep.setForeground(new java.awt.Color(255, 0, 0));
        textoErrorRep.setText("jLabel8");

        textoErrorTema.setForeground(new java.awt.Color(255, 0, 0));
        textoErrorTema.setText("jLabel8");

        FinRep.setText("Fecha Fin");

        textoErrorFechaRep.setForeground(new java.awt.Color(255, 0, 0));
        textoErrorFechaRep.setText("jLabel8");

        boxHoraIni.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3","4", "5", "6", "7","8", "9", "10", "11","12", "13", "14", "15","16", "17", "18", "19","20", "21", "22", "23" }));

        boxHoraFin.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3","4", "5", "6", "7","8", "9", "10", "11","12", "13", "14", "15","16", "17", "18", "19","20", "21", "22", "23","24" }));

        textoErrorHoraf.setForeground(new java.awt.Color(255, 0, 0));
        textoErrorHoraf.setText("jLabel8");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(297, 297, 297)
                .add(jLabel10)
                .addContainerGap(321, Short.MAX_VALUE))
            .add(layout.createSequentialGroup()
                .add(44, 44, 44)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(layout.createSequentialGroup()
                                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(radioRep)
                                            .add(jLabel3)
                                            .add(jLabel2)
                                            .add(jLabel1))
                                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(layout.createSequentialGroup()
                                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                                    .add(layout.createSequentialGroup()
                                                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                                            .add(boxTema, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                                            .add(texTitulo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 114, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                                            .add(textoErrorTitulo)
                                                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                                                .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                                                                    .add(creaTema)
                                                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED))
                                                                .add(textoErrorDescripcion))))
                                                    .add(layout.createSequentialGroup()
                                                        .add(40, 40, 40)
                                                        .add(jLabel4))
                                                    .add(textoErrorTema)
                                                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                                            .add(layout.createSequentialGroup()
                                                .add(21, 21, 21)
                                                .add(boxPeriodicidad, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 168, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                                    .add(layout.createSequentialGroup()
                                        .add(8, 8, 8)
                                        .add(textoErrorRep, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 53, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                                .add(58, 58, 58))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                                .add(cancelar)
                                .add(18, 18, 18)
                                .add(botonAcceptar)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)))
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel6)
                            .add(FinRep)
                            .add(jLabel7)
                            .add(boxAviso)
                            .add(jLabel5)
                            .add(textoErrorHorai)
                            .add(textoErrorHoraf))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(dateComboIni, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 98, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(boxHoraIni, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(boxHoraFin, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .add(15, 15, 15))
                            .add(dateComboRep, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, textoErrorFechaRep))
                        .add(76, 76, 76))
                    .add(layout.createSequentialGroup()
                        .add(radioLab)
                        .addContainerGap(582, Short.MAX_VALUE))))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(jSeparator1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 667, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(layout.createSequentialGroup()
                                        .add(textoErrorDescripcion)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(layout.createSequentialGroup()
                                                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                                .add(jLabel4))
                                            .add(jLabel2)))
                                    .add(layout.createSequentialGroup()
                                        .add(36, 36, 36)
                                        .add(textoErrorHorai)))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(creaTema)
                                    .add(jLabel3)
                                    .add(boxTema, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(boxAviso)))
                            .add(layout.createSequentialGroup()
                                .add(17, 17, 17)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                                        .add(dateComboIni, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(15, 15, 15))
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                            .add(texTitulo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                            .add(textoErrorTitulo)
                                            .add(jLabel5)
                                            .add(jLabel1))
                                        .add(14, 14, 14)))
                                .add(30, 30, 30)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jLabel6)
                                    .add(boxHoraIni, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .add(18, 18, 18)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jLabel7)
                                    .add(boxHoraFin, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .add(20, 20, 20)
                                .add(textoErrorHoraf)
                                .add(49, 49, 49)))
                        .add(0, 0, 0)
                        .add(textoErrorTema)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(73, 73, 73)
                                .add(FinRep))
                            .add(layout.createSequentialGroup()
                                .add(72, 72, 72)
                                .add(dateComboRep, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(textoErrorFechaRep)
                                .add(9, 9, 9)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(cancelar)
                                    .add(botonAcceptar)))))
                    .add(layout.createSequentialGroup()
                        .add(241, 241, 241)
                        .add(radioLab)
                        .add(18, 18, 18)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(radioRep)
                            .add(boxPeriodicidad, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(textoErrorRep, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 14, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarActionPerformed
this.dispose();        // TODO add your handling code here:
}//GEN-LAST:event_cancelarActionPerformed

    private void boxPeriodicidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxPeriodicidadActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_boxPeriodicidadActionPerformed

    private void creaTemaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creaTemaActionPerformed
        VistaCrearTema nuevoTema = new VistaCrearTema(new javax.swing.JFrame(), true);
        nuevoTema.setVisible(true);
        boxTema.removeAllItems();
        cargarTemas();
}//GEN-LAST:event_creaTemaActionPerformed

    private void texTituloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_texTituloActionPerformed
        textoErrorTitulo.setText("");
        // TODO add your handling code here:
}//GEN-LAST:event_texTituloActionPerformed

    private void botonAcceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAcceptarActionPerformed
    /*Comprobamos que todos los datos dean correctos, y en el caso de serlo creamos la cita*/

        int hIni = -1;
        int hFin = -1;
        boolean correcto=true;
        boolean laboral = radioLab.isSelected();
        boolean reps = radioRep.isSelected();
        boolean aviso = boxAviso.isSelected();
        String period=null;
        String titulo = null;
        String desc = null;
        String tema=null;
        Date fecha1=null;
        Date fecha2=null;
        Calendar fechaTemp1 = null;
        Calendar fechaTemp2 = null;
        int valorPeriodicidad=Constantes.INCORRECTO;
        int idAct=0;
        boolean creado= false;

        if (this.boxHoraIni.getSelectedItem()==null || this.boxHoraFin.getSelectedItem()==null  ) {
            textoErrorHorai.setText(Constantes.INTROHORA);
            correcto = false;}


        else{
            /*comprobamos parametros de entrada*/
//            System.out.println("pasamos por el primer else");
          //  hIni=Integer.parseInt(formatTextHi.getText());
            //hFin=Integer.parseInt(formatTextHf.getText());
            hIni = Integer.parseInt((String)this.boxHoraIni.getSelectedItem());
            hFin = Integer.parseInt((String)this.boxHoraFin.getSelectedItem());
            period = (String)boxPeriodicidad.getSelectedItem();
            valorPeriodicidad = this.obtenerPeriodicidad(period);
            titulo= texTitulo.getText();
            desc = jTextArea1.getText();
            tema = (String)boxTema.getSelectedItem();
            fechaTemp1 = dateComboIni.getCurrent();
            fecha1 = fechaTemp1.getTime();
            correcto = comprobarValores(hIni, hFin,reps,valorPeriodicidad,titulo,desc);

        }

        if (correcto){
            /*parametros de entrada correctos: pasamos a insertar la actividad
             * necesidad vigilar citas con slots superpuestos.SOBRETODO repetitivas
             */
            CtrlCrearActividad2 CCA2= new CtrlCrearActividad2();
            CtrlCrearTema CCT = new CtrlCrearTema();
//            System.out.println("correcto por ahora a crear actividad");
            if (reps){
//                System.out.println("es repetitiva");
                fechaTemp2 = dateComboRep.getCurrent();
                fecha2 = fechaTemp2.getTime();
                int test = comprobarFecha(fechaTemp1,fechaTemp2);

                if (test ==0 ){
                    
                    idAct=CCA2.crearActividad(titulo, desc, Constantes.CITAREPETITIVA);
                    CCA2.completarCitaRepetitiva(laboral, valorPeriodicidad, fecha1,fecha2);
                    creado = true;
//                    CD3.listarAnadidos();
                    //insertar horarios
                }
                else if (test ==1){
                this.textoErrorFechaRep.setText("La fecha ha de ser posterior a la fecha actual");
                }
                else{
                this.textoErrorHoraf.setText("Solo se gestionan 10 años maximo");
                }

            }
            else{
//                System.out.println("no repetitiva");
                idAct=CCA2.crearActividad(titulo, desc, Constantes.CITA);
                CCA2.completarCita(reps, laboral);
                creado = true;
//                CD3.listarAnadidos();
                //insertar horarios

            }

            if (creado){
//                System.out.println("Se ha creado la cita");
                /*Pasamos a insertar horarios de la cita*/

                if (!tema.equals(Constantes.NINGUNO) && !tema.equals("")) CCT.crearTema(tema, titulo, idAct);
                int insercionCorrecta=-1;
                if (reps){
                    
                    CAGE.insertarPeriodicamente(idAct,fecha1,fecha2,hIni,hFin,valorPeriodicidad,aviso);
                }
                else{
                    
                    
                   insercionCorrecta=CAGE.asignarNuevoHorarioCita(idAct, fecha1, hIni, hFin);
                   

                   if (insercionCorrecta>0){
                        CtrlEliminarActividad CEA= new CtrlEliminarActividad();
                        CEA.eliminarActividadTodo(idAct);

                   }
                }
               if (aviso){

                    CtrlCrearAviso CCA =  new CtrlCrearAviso();
                    CCA.crearAviso(fecha1, idAct);

                 }

this.dispose();
            }




        }



        
}//GEN-LAST:event_botonAcceptarActionPerformed

    private void radioRepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioRepActionPerformed

        if (radioRep.isSelected()){
            dateComboRep.setVisible(true);
            FinRep.setVisible(true);
        }

        else {
            dateComboRep.setVisible(false);
            FinRep.setVisible(false);
        }
    }//GEN-LAST:event_radioRepActionPerformed

        private  void cargarTemas(){

        @SuppressWarnings("unchecked")
        ArrayList<String>lista=CD3.listartemas();
        int indiceI=0;
        int tamanyo=lista.size();
        boxTema.addItem(Constantes.NINGUNO);
        while(indiceI<tamanyo){
               boxTema.addItem(lista.get(indiceI));
             indiceI++;
        }

    }
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                VistaAnadirCita dialog = new VistaAnadirCita(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }



    public boolean comprobarValores(int hInicio, int hFin, boolean rep,
            int period,String titulo, String descripcion){

        boolean correcto = true;


        textoErrorTitulo.setText("");
        textoErrorDescripcion.setText("");
        textoErrorHorai.setText("");
        textoErrorHoraf.setText("");
        textoErrorRep.setText("");
        textoErrorTema.setText("");
        textoErrorFechaRep.setText("");



        if (hInicio>=hFin) {
            textoErrorHorai.setText(Constantes.ERRORFORMATO);
            correcto=false;
        }

        if (hInicio<0 || hInicio>23) {
            textoErrorHorai.setText(Constantes.HORAINCORRECTA);
            correcto=false;
        }
        if (hFin<0 || hInicio>23) {
            textoErrorHoraf.setText(Constantes.HORAINCORRECTA);
            correcto=false;}

        if (rep && period<0){

            textoErrorRep.setText("Introduce una periodicidad");
            correcto=false;
        }

//        if (rep && (this.obtenerPeriodicidad(period)<0)){
//
//            textoErrorRep.setText("Error en la periodicidad");
//            correcto=false;
//
//        }

        if (titulo.isEmpty() || titulo.equals("")) {

            textoErrorTitulo.setText("Itroduce un titulo valido");
            correcto=false;
        }
        if (descripcion.isEmpty() || descripcion.equals("")) {

            textoErrorDescripcion.setText("Itroduce una descripcion valida");
            correcto=false;
        }


    return correcto;
    }

     private int comprobarFecha(Calendar fechaTemp1, Calendar fechaTemp2) {

         int correct = 0;
         if (fechaTemp1.after(fechaTemp2)) correct = 1;
         if (fechaTemp1.get(Calendar.YEAR)+10 < fechaTemp2.get(Calendar.YEAR)) correct = 2;
         return correct;

    }

     private int obtenerPeriodicidad (String periodo){

         periodo.trim();
         int periodicidad = Constantes.INCORRECTO;
         if (periodo.equals("Diaria")) periodicidad= Constantes.DIARIA;
         if (periodo.equals("Semanal"))periodicidad=  Constantes.SEMANAL;
         if (periodo.equals("Mensual"))periodicidad=  Constantes.MENSUAL;
         if (periodo.equals("Anual"))periodicidad=  Constantes.ANUAL;

         return periodicidad;
     }



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel FinRep;
    private javax.swing.JButton botonAcceptar;
    private javax.swing.JCheckBox boxAviso;
    private javax.swing.JComboBox boxHoraFin;
    private javax.swing.JComboBox boxHoraIni;
    private javax.swing.JComboBox boxPeriodicidad;
    protected javax.swing.JComboBox boxTema;
    private javax.swing.JButton cancelar;
    private javax.swing.JButton creaTema;
    private datechooser.beans.DateChooserCombo dateComboIni;
    private datechooser.beans.DateChooserCombo dateComboRep;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JRadioButton radioLab;
    private javax.swing.JRadioButton radioRep;
    protected javax.swing.JTextField texTitulo;
    private javax.swing.JLabel textoErrorDescripcion;
    private javax.swing.JLabel textoErrorFechaRep;
    private javax.swing.JLabel textoErrorHoraf;
    private javax.swing.JLabel textoErrorHorai;
    private javax.swing.JLabel textoErrorRep;
    private javax.swing.JLabel textoErrorTema;
    private javax.swing.JLabel textoErrorTitulo;
    // End of variables declaration//GEN-END:variables

}
